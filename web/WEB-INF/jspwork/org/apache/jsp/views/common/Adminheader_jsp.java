/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.37
 * Generated at: 2019-03-09 08:39:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.common;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Adminheader_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>감성수학</title>\r\n");
      out.write("<style>\r\n");
      out.write("#cssmenu {\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  font-family: Helvetica, sans-serif;\r\n");
      out.write("  font-size: 14px;\r\n");
      out.write("  background-color: #ffffff;\r\n");
      out.write("  box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul {\r\n");
      out.write("  display: -webkit-flex;\r\n");
      out.write("  display: -ms-flexbox;\r\n");
      out.write("  display: flex;\r\n");
      out.write("  list-style: none;\r\n");
      out.write("  margin: 0;\r\n");
      out.write("  padding: 0;\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul li {\r\n");
      out.write("  position: relative;\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul li:not(:first-child) {\r\n");
      out.write("  padding-left: 20px;\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul li:not(:first-child):before,\r\n");
      out.write("#cssmenu ul li:not(:first-child):after {\r\n");
      out.write("  content: '';\r\n");
      out.write("  position: absolute;\r\n");
      out.write("  top: 50%;\r\n");
      out.write("  width: 1.5px;\r\n");
      out.write("  height: 20px;\r\n");
      out.write("  background-color: rgba(0, 0, 0, 0.5);\r\n");
      out.write("  -webkit-transform: translateY(-50%) rotate(30deg);\r\n");
      out.write("  -ms-transform: translateY(-50%) rotate(30deg);\r\n");
      out.write("  transform: translateY(-50%) rotate(30deg);\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul li:not(:first-child):before {\r\n");
      out.write("  left: 5.25px;\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul li:not(:first-child):after {\r\n");
      out.write("  left: 13.25px;\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul li.active a,\r\n");
      out.write("#cssmenu ul li.active a:hover {\r\n");
      out.write("  color: #f1593f;\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul li a {\r\n");
      out.write("  position: relative;\r\n");
      out.write("  box-sizing: border-box;\r\n");
      out.write("  display: inline-block;\r\n");
      out.write("  font-weight: 600;\r\n");
      out.write("  color: #464951;\r\n");
      out.write("  padding: 18px 25px 15px;\r\n");
      out.write("  text-decoration: none;\r\n");
      out.write("  text-transform: uppercase;\r\n");
      out.write("  letter-spacing: 1px;\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul li a:hover {\r\n");
      out.write("  color: #757a88;\r\n");
      out.write("}\r\n");
      out.write("#cssmenu ul li a i {\r\n");
      out.write("  -webkit-transform: scale(1.4);\r\n");
      out.write("  -ms-transform: scale(1.4);\r\n");
      out.write("  transform: scale(1.4);\r\n");
      out.write("}\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("<div id=\"cssmenu\">\r\n");
      out.write("<ul>\r\n");
      out.write("   <li class='active'><a href='#'>감성수학</a></li>\r\n");
      out.write("   <li><a href=\"../notice/noticeListView.jsp\">공지사항관리</a></li>\r\n");
      out.write("   <li><a href='#'>FAQ관리</a></li>\r\n");
      out.write("   <li><a href='#'>QnA관리</a></li>\r\n");
      out.write("   <li><a href='#'>팝업창관리</a></li>\r\n");
      out.write("   <li><a href='#'>문제관리</a></li>\r\n");
      out.write("   <li><a href='#'>회원관리</a></li>\r\n");
      out.write("   <li><a href='#'>로그아웃</a></li>\r\n");
      out.write("</ul>\r\n");
      out.write("</div>\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
